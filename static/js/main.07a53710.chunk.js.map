{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/Input/Input.styles.js","components/Input/Input.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styles.js","components/ContactList/ContactList.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","LabelStyled","label","InputStyled","input","Input","id","type","name","placeholder","value","onChange","title","required","allProps","htmlFor","defaultProps","FormStyled","form","SubmitButtonStyled","button","ContactForm","onSubmit","useState","setId","setName","number","setNumber","handleInputValues","evt","currentTarget","uuidv4","preventDefault","pattern","ContactListStyled","ul","ContactItemStyled","li","RemoveBtnStyled","ContactList","contacts","onRemoveContact","map","onClick","NotificationStyled","p","Notification","text","H1Styled","h1","H2Styled","h2","App","storageContacts","window","localStorage","getItem","parsedContacts","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","mainContacts","contact","toLocaleLowerCase","includes","toLowerCase","newContact","some","alert","length","target","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a53710.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ContainerStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n\r\n\r\n  width: 500px;\r\n  padding: 10px;\r\n\r\n  border: 2px solid red;\r\n  border-radius: 20px;\r\n`;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ContainerStyled } from \"./Container.styles\";\n\nexport const Container = ({children}) => {\n  return (\n    <ContainerStyled>\n      {children}\n    </ContainerStyled>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelStyled = styled.label`\r\ndisplay: block;\r\n  margin-bottom: 10px;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\ncolor: black;\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\nwidth: 250px;\r\nmargin-bottom: 15px;\r\npadding: 10px;\r\nborder: 2px solid green;\r\nborder-radius: 10px;\r\n`;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LabelStyled, InputStyled } from './Input.styles';\r\n\r\nexport const Input = ({\r\n  id,\r\n  type,\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  title,\r\n  required,\r\n  ...allProps\r\n}) => {\r\n  return (\r\n    <>\r\n      <LabelStyled htmlFor={id}>{label}</LabelStyled>\r\n      <InputStyled\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        {...allProps}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        title={title}\r\n        required={required}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: '',\r\n  title: '',\r\n  required: false,\r\n};\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n  required: PropTypes.bool,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FormStyled = styled.form`\r\nmargin-bottom: 20px;\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const SubmitButtonStyled = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 150px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px;\r\n\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n\r\n\r\n  background-color: yellow;\r\n  border: 2px solid green;\r\n  border-radius: 20px;\r\n`;\r\n","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Input } from '../Input/Input';\nimport { FormStyled, SubmitButtonStyled } from './ContactForm.styles';\n\nexport const ContactForm = ({onSubmit}) => {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputValues = evt => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n\n    setId(uuidv4())\n  };\n\n  const resetForm = () => {\n    setId('');\n    setName('');\n    setNumber('');\n  };\n\n  const submitForm = evt => {\n    evt.preventDefault();\n    onSubmit({id, name, number});\n    resetForm();\n  };\n\n  return (\n    <FormStyled onSubmit={submitForm}>\n      <Input\n        id={uuidv4()}\n        type={'text'}\n        label={'Name'}\n        name={'name'}\n        placeholder={'Jason Born'}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={name}\n        onChange={handleInputValues}\n        title={\n          \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        }\n        required={true}\n      />\n\n      <Input\n        id={uuidv4()}\n        type={'tel'}\n        label={'Number'}\n        name={'number'}\n        placeholder={'+44-787-123-45-67'}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        value={number}\n        onChange={handleInputValues}\n        title={\n          'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n        }\n        required={true}\n      />\n\n      <SubmitButtonStyled type=\"submit\">Add contact</SubmitButtonStyled>\n    </FormStyled>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListStyled = styled.ul`\r\nwidth: 100%;\r\n  margin-top: 10px;\r\n  padding: 15px;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const ContactItemStyled = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n`;\r\n\r\nexport const RemoveBtnStyled = styled.button`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n\r\nwidth: 75px;\r\nmargin-left: auto;\r\npadding: 5px;\r\n\r\nfont-size: 15px;\r\nfont-weight: 500;\r\n\r\nbackground-color: turquoise;\r\nborder: 2px solid orangered;\r\nborder-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  ContactListStyled,\r\n  ContactItemStyled,\r\n  RemoveBtnStyled,\r\n} from \"./ContactList.styles\";\r\n\r\nexport const ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItemStyled key={id}>\r\n          {name} : {number}\r\n          <RemoveBtnStyled type=\"button\" onClick={() => onRemoveContact(id)}>\r\n            Remove\r\n          </RemoveBtnStyled>\r\n        </ContactItemStyled>\r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const NotificationStyled = styled.p`\r\nmargin-top: 0;\r\nmargin-bottom: 0;\r\npadding: 10px;\r\nfont-size: 20px;\r\nfont-weight: 500;\r\ncolor: orange;\r\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NotificationStyled } from \"./Notification.styles\";\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const H1Styled = styled.h1`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const H2Styled = styled.h2`\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n","import { useState, useEffect } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Container } from './components/Container/Container';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Notification } from './components/Notification/Notification';\nimport { Input } from './components/Input/Input';\n\nimport { H1Styled, H2Styled } from './App.styles';\n\nconst App = () => {\n  const storageContacts = window.localStorage.getItem('contacts');\n  const parsedContacts = JSON.parse(storageContacts);\n\n  const [contacts, setContacts] = useState(parsedContacts ?? []);\n  const [filter, setFilter] = useState('');\n\n  const getContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const addContact = newContact => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      alert(\n        'You have contact with this name, please remove old contact and create new',\n      );\n      return;\n    }\n\n    setContacts([newContact, ...contacts]);\n  };\n\n  const removeContact = data => {\n    setContacts(contacts.filter(contact => contact.id !== data));\n  };\n\n  const changeFilterValue = evt => {\n    setFilter(evt.target.value);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const mainContacts = getContacts();\n\n  return (\n    <Container>\n      <H1Styled>PhoneBook</H1Styled>\n      <H2Styled>Add contact</H2Styled>\n      <ContactForm onSubmit={addContact} />\n\n      <H2Styled>Contacts</H2Styled>\n      {mainContacts.length > 0 ? (\n        <>\n          {/* Filter */}\n          <Input\n            id={uuidv4()}\n            label={'Find contacts by name'}\n            placeholder={'Boris Britva'}\n            name={'search'}\n            value={filter}\n            onChange={changeFilterValue}\n          />\n\n          <ContactList contacts={mainContacts} onRemoveContact={removeContact} />\n        </>\n      ) : (\n        <Notification text={'You don`t have any contacts'} />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}